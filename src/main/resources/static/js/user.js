document.addEventListener("DOMContentLoaded", function () {
    const editUserForm = document.getElementById("editUserForm");
    const currentUserLogin = document.getElementById("currentUserLogin");
    const currentUserRoles = document.getElementById("currentUserRoles");

    const apiCurrentUserUrl = "/me"; // –ó–∞–ø—Ä–æ—Å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    // üìå –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    fetch(apiCurrentUserUrl, { credentials: "include" })
        .then(response => {
            if (!response.ok) throw new Error("Failed to fetch current user");
            return response.json();
        })
        .then(data => {
            document.getElementById("editUserId").value = data.id;
            document.getElementById("editFirstName").value = data.firstName;
            document.getElementById("editEmail").value = data.email;

            currentUserLogin.textContent = data.username;
            currentUserRoles.textContent = data.roles ? data.roles.join(", ") : "Unknown Role";
        })
        .catch(error => {
            console.error("Error fetching current user:", error);
            currentUserLogin.textContent = "Unknown User";
            currentUserRoles.textContent = "Unknown Role";
        });

    // üìå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    editUserForm.addEventListener("submit", function (event) {
        event.preventDefault();

        const updatedUser = {
            firstName: document.getElementById("editFirstName").value,
            email: document.getElementById("editEmail").value,
            password: document.getElementById("editPassword").value || null
        };

        fetch(`/users/${document.getElementById("editUserId").value}`, {
            method: "PUT",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(updatedUser)
        })
            .then(response => response.json())
            .then(() => {
                alert("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!");
                location.reload();
            })
            .catch(error => alert("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: " + error));
    });
});
